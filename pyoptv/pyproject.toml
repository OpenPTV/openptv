[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyoptv"
version = "0.1.0"
description = "Pure Python implementation of OpenPTV - Open Source Particle Tracking Velocimetry"
authors = [
    {name = "OpenPTV Contributors", email = "openptv@googlegroups.com"}
]
readme = "README.md"
license = {text = "LGPL-3.0"}
requires-python = ">=3.8"
keywords = ["particle tracking", "velocimetry", "computer vision", "fluid mechanics", "PIV", "PTV"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "numpy>=1.19.0",
    "scipy>=1.6.0",
    "matplotlib>=3.3.0",
]

[project.optional-dependencies]
# Optional dependencies for performance optimization
numba = ["numba>=0.50.0"]
# Development dependencies
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]
# All optional dependencies
all = [
    "numba>=0.50.0",
]

[project.urls]
Homepage = "https://github.com/OpenPTV/openptv"
Documentation = "https://openptv.readthedocs.io"
Repository = "https://github.com/OpenPTV/openptv.git"
"Bug Tracker" = "https://github.com/OpenPTV/openptv/issues"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["pyoptv"]

[tool.setuptools.package-data]
pyoptv = ["tests/testing_fodder/**/*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["pyoptv"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pyoptv"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "matplotlib.*",
    "numba.*",
]
ignore_missing_imports = true